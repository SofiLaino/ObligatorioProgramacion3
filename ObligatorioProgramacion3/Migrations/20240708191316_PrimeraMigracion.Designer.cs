// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObligatorioProgramacion3.Datos;

#nullable disable

namespace ObligatorioProgramacion3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240708191316_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Tarariras"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Colonia del Sacramento"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Juan Lacaze"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Rosario"
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Ejercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaquinaId");

                    b.ToTable("Ejercicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaquinaId = 2,
                            Nombre = "Caminar"
                        },
                        new
                        {
                            Id = 2,
                            MaquinaId = 2,
                            Nombre = "Correr"
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("ResponsableId")
                        .IsUnique();

                    b.ToTable("Locales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CiudadId = 1,
                            Direccion = "La paz 2138",
                            Nombre = "Mega",
                            ResponsableId = 1,
                            Telefono = "098543124"
                        },
                        new
                        {
                            Id = 2,
                            CiudadId = 2,
                            Direccion = "Mangaeli 1234",
                            Nombre = "Oxigeno",
                            ResponsableId = 2,
                            Telefono = "091453122"
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocalAsociadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrecioCompra")
                        .HasColumnType("int");

                    b.Property<int>("TipoMaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("VidaUtil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalAsociadoId");

                    b.HasIndex("TipoMaquinaId");

                    b.ToTable("Maquinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponible = true,
                            FechaCompra = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalAsociadoId = 2,
                            Nombre = "Caminadora",
                            PrecioCompra = 12000,
                            TipoMaquinaId = 2,
                            VidaUtil = 7
                        },
                        new
                        {
                            Id = 2,
                            Disponible = false,
                            FechaCompra = new DateTime(2019, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalAsociadoId = 1,
                            Nombre = "Prensa",
                            PrecioCompra = 20000,
                            TipoMaquinaId = 1,
                            VidaUtil = 10
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Responsable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Responsables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pellaton",
                            Nombre = "Agustina",
                            Telefono = "091672542"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Perez",
                            Nombre = "Juan",
                            Telefono = "091655818"
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Rutina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoRutinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoRutinaId");

                    b.ToTable("Rutinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Semanal",
                            Nombre = "Full",
                            TipoRutinaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Semanal",
                            Nombre = "Pierna",
                            TipoRutinaId = 2
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.RutinaEjercicio", b =>
                {
                    b.Property<int>("IdRutina")
                        .HasColumnType("int");

                    b.Property<int>("IdEjercicio")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRutina", "IdEjercicio");

                    b.HasIndex("IdEjercicio");

                    b.ToTable("RutinasEjercicios");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.RutinaSocio", b =>
                {
                    b.Property<int>("IdRutina")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<decimal?>("Calificacion")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("IdRutina", "IdSocio");

                    b.HasIndex("IdSocio");

                    b.ToTable("RutinasSocios");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalAsociadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSocioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalAsociadoId");

                    b.HasIndex("TipoSocioId");

                    b.ToTable("Socios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pellaton",
                            Email = "agusPellaton@gmail.com",
                            LocalAsociadoId = 1,
                            Nombre = "Agustina",
                            Telefono = "091672542",
                            TipoSocioId = 2
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Geymonat",
                            Email = "fioGeymonat@gmail.com",
                            LocalAsociadoId = 1,
                            Nombre = "Fiorella",
                            Telefono = "098564234",
                            TipoSocioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Laino",
                            Email = "sofiaLaino@gmail.com",
                            LocalAsociadoId = 2,
                            Nombre = "Sofia",
                            Telefono = "099765234",
                            TipoSocioId = 1
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.TipoMaquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoMaquina");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Fuerza"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Cardio"
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.TipoRutina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoRutinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Bajar de peso"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Aumentar masa muscular"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Definicion"
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.TipoSocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoSocios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Premium"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Standard"
                        });
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Ejercicio", b =>
                {
                    b.HasOne("ObligatorioProgramacion3.Models.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId");

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Local", b =>
                {
                    b.HasOne("ObligatorioProgramacion3.Models.Ciudad", "Ciudad")
                        .WithMany("Locales")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProgramacion3.Models.Responsable", "Responsable")
                        .WithOne("Local")
                        .HasForeignKey("ObligatorioProgramacion3.Models.Local", "ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Maquina", b =>
                {
                    b.HasOne("ObligatorioProgramacion3.Models.Local", "LocalAsociado")
                        .WithMany("Maquinas")
                        .HasForeignKey("LocalAsociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProgramacion3.Models.TipoMaquina", "TipoMaquina")
                        .WithMany()
                        .HasForeignKey("TipoMaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalAsociado");

                    b.Navigation("TipoMaquina");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Rutina", b =>
                {
                    b.HasOne("ObligatorioProgramacion3.Models.TipoRutina", "TipoRutina")
                        .WithMany()
                        .HasForeignKey("TipoRutinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoRutina");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.RutinaEjercicio", b =>
                {
                    b.HasOne("ObligatorioProgramacion3.Models.Ejercicio", "Ejercicio")
                        .WithMany("RutinasEjercicios")
                        .HasForeignKey("IdEjercicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProgramacion3.Models.Rutina", "Rutina")
                        .WithMany("RutinasEjercicios")
                        .HasForeignKey("IdRutina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejercicio");

                    b.Navigation("Rutina");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.RutinaSocio", b =>
                {
                    b.HasOne("ObligatorioProgramacion3.Models.Rutina", "Rutina")
                        .WithMany("RutinasSocios")
                        .HasForeignKey("IdRutina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProgramacion3.Models.Socio", "Socio")
                        .WithMany("RutinasSocios")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rutina");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Socio", b =>
                {
                    b.HasOne("ObligatorioProgramacion3.Models.Local", "LocalAsociado")
                        .WithMany()
                        .HasForeignKey("LocalAsociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProgramacion3.Models.TipoSocio", "TipoSocio")
                        .WithMany()
                        .HasForeignKey("TipoSocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalAsociado");

                    b.Navigation("TipoSocio");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Ciudad", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Ejercicio", b =>
                {
                    b.Navigation("RutinasEjercicios");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Local", b =>
                {
                    b.Navigation("Maquinas");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Responsable", b =>
                {
                    b.Navigation("Local")
                        .IsRequired();
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Rutina", b =>
                {
                    b.Navigation("RutinasEjercicios");

                    b.Navigation("RutinasSocios");
                });

            modelBuilder.Entity("ObligatorioProgramacion3.Models.Socio", b =>
                {
                    b.Navigation("RutinasSocios");
                });
#pragma warning restore 612, 618
        }
    }
}
